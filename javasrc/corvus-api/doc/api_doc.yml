swagger: '2.0'
info:
  title: Hermes RESTful API
  description: Access Hermes functionalities using RESTful API.
  version: "1.0.0"
host: hermes_install_host
schemes:
  - http
basePath: /corvus/api
produces:
  - application/vnd.api+json
paths:
  /status:
    get:
      summary: Query API server status
      description: |
        The status endpoint returns the health status of the API server.
        It also returns the current timestamp and current version of the
        API server. No parameters are needed.
      tags:
        - Status
      responses:
        200:
          description: Hermes API server status
          schema:
            $ref: '#/definitions/Status'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/redownload/ebms:
    post:
      summary: Reset message status from DL to PS
      description: |
        The status of ebms message being downloaded is reset to PS,
        then the message will become ready to download again.
      tags:
        - Message
        - ebms
      parameters:
        - name: message_id
          in: body
          required: true
          schema:
            $ref: '#/definitions/Message_Identifier'
      responses:
        200:
          description: Message ID
          schema:
            $ref: '#/definitions/Identifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /partnership/ebms:
    get:
      summary: Query ebMS partnership
      description: |
        The query ebMS partnership endpoint returns all partnerships set up
        in Hermes ebMS plugin.
      tags:
        - Partnership
        - ebms
      responses:
        200:
          description: An array of partnership objects
          schema:
            type: object
            properties:
              partnerships:
                type: array
                items:
                  $ref: '#/definitions/Ebms_Partnership'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create or edit an ebMS partnership
      description: |
        The create or edit ebMS partnership endpoint creates a partnership in Hermes
        server using the parameters if the partnership ID does not exist yet. Otherwise,
        the parameters will be used to update the existing partnerhsip.
      tags:
        - Partnership
        - ebms
      parameters:
        - name: partnership
          in: body
          required: true
          schema:
            $ref: '#/definitions/Ebms_Partnership'
      responses:
        200:
          description: A partnership ID
          schema:
            $ref: '#/definitions/Identifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /partnership/ebms/{partnershipId}:
    delete:
      summary: Delete an ebMS partnership
      description: |
        The delete ebMS partnership endpoint remove the specified partnership
        in Hermes ebMS plugin.
      tags:
        - Partnership
        - ebms
      parameters:
        - in: path
          name: partnershipId
          type: string
          description: id of the partnership to be removed
          required: true
      responses:
        200:
          description: Whether the deletion is successful or not
          schema:
            $ref: '#/definitions/ActionResult'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /partnership/as2:
    get:
      summary: Query AS2 partnership
      description: |
        The query AS2 partnership endpoint returns all partnerships set up
        in Hermes AS2 plugin.
      tags:
        - Partnership
        - as2
      responses:
        200:
          description: An array of partnership objects
          schema:
            type: object
            properties:
              partnerships:
                type: array
                items:
                  $ref: '#/definitions/As2_Partnership'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create or edit an AS2 partnership
      description: |
        The create or edit AS2 partnership endpoint creates a partnership in Hermes
        server using the parameters if the partnership ID does not exist yet. Otherwise,
        the parameters will be used to update the existing partnerhsip.
      tags:
        - Partnership
        - as2
      parameters:
        - name: partnership
          in: body
          required: true
          schema:
            $ref: '#/definitions/As2_Partnership'
      responses:
        200:
          description: A partnership ID
          schema:
            $ref: '#/definitions/Identifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /partnership/as2/{partnershipId}:
    delete:
      summary: Delete an AS2 partnership
      description: |
        The delete AS2 partnership endpoint remove the specified partnership
        in Hermes AS2 plugin.
      tags:
        - Partnership
        - as2
      parameters:
        - in: path
          name: partnershipId
          type: string
          description: id of the partnership to be removed
          required: true
      responses:
        200:
          description: Whether the deletion is successful or not
          schema:
            $ref: '#/definitions/ActionResult'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/send/ebms:
    post:
      summary: Send an ebMS message
      description: |
        The send ebMS message endpoint requests Hermes server to send a message.
        The message should have its parameters fitting a valid partnership configured
        at Hermes server before sending.
      tags:
        - Message
        - Send
        - ebms
      parameters:
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/EbmsMessageSendRequest'
      responses:
        200:
          description: The message ID generated by Hermes.
          schema:
            $ref: '#/definitions/Identifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Query for the status of a ebMS message sending request
      description: |
        The query ebMS message status endpoints queries for the status of a previous
        message sending request.
      tags:
        - Message
        - Send
        - ebms
      parameters:
        - name: id
          in: query
          required: true
          type: string
      responses:
        200:
          description: Message ID and status
          schema:
            $ref: '#/definitions/MessageSendStatus'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/send/as2:
    post:
      summary: Send an AS2 message
      description: |
        The send AS2 message endpoint requests Hermes server to send a message.
        The message should have its parameters fitting a valid partnership configured
        at Hermes server before sending.
      tags:
        - Message
        - Send
        - as2
      parameters:
        - name: message
          in: body
          required: true
          schema:
            $ref: '#/definitions/As2MessageSendRequest'
      responses:
        200:
          description: The message ID generated by Hermes.
          schema:
            $ref: '#/definitions/Identifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Query for the status of a AS2 message sending request
      description: |
        The query AS2 message status endpoints queries for the status of a previous
        message sending request.
      tags:
        - Message
        - Send
        - as2
      parameters:
        - name: id
          in: query
          required: true
          type: string
      responses:
        200:
          description: Message ID and status
          schema:
            $ref: '#/definitions/MessageSendStatus'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/history/ebms:
    get:
      summary: Get ebMS message history
      description: |
        The get ebMS message history API queries for messages which
        match the passed in query parameters.
      tags:
        - Message
        - History
        - ebms
      parameters:
        - name: message_id
          in: query
          required: false
          type: string
        - name: message_box
          in: query
          required: false
          type: string
        - name: conversation_id
          in: query
          required: false
          type: string
        - name: cpa_id
          in: query
          required: false
          type: string
        - name: service
          in: query
          required: false
          type: string
        - name: action
          in: query
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
      responses:
        200:
          description: |
            A list of messages, which identifies a list of messages
            matching the passed in query parameters.
          schema:
            type: object
            properties:
              message_ids:
                type: array
                items:
                  $ref: '#/definitions/EbmsMessageHistoryIdentifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Reset message delivery status
      description: |
        The reset message status API resets a message's status to
        undelivered. Note that the only support action is 'reset'.
      tags:
        - Message
        - History
        - ebms
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/MessageStatusReset'
      responses:
        200:
          description: Whether the deletion is successful or not
          schema:
            $ref: '#/definitions/ActionResult'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/history/as2:
    get:
      summary: Get AS2 message history
      description: |
        The get AS2 message history API queries for messages which
        match the passed in query parameters.
      tags:
        - Message
        - History
        - as2
      parameters:
        - name: message_id
          in: query
          required: false
          type: string
        - name: message_box
          in: query
          required: false
          type: string
        - name: as2_from
          in: query
          required: false
          type: string
        - name: as2_to
          in: query
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
      responses:
        200:
          description: |
            A list of messages, which identifies a list of messages
            matching the passed in query parameters.
          schema:
            type: object
            properties:
              message_ids:
                type: array
                items:
                  $ref: '#/definitions/As2MessageHistoryIdentifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Reset message delivery status
      description: |
        The reset message status API resets a message's status to
        undelivered. Note that the only support action is 'reset'.
      tags:
        - Message
        - History
        - as2
      parameters:
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/MessageStatusReset'
      responses:
        200:
          description: Whether the deletion is successful or not
          schema:
            $ref: '#/definitions/ActionResult'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/receive/ebms:
    get:
      summary: Get a list of received ebMS message
      description: |
        The get unread ebMS messages endpoints queries for the list of
        messages that has been received for the specified partnership.
        If the parameter include_read is true, only unread messages
        will be returned.
      tags:
        - Message
        - Receive
        - ebms
      parameters:
        - name: partnership_id
          in: query
          required: true
          type: string
        - name: include_read
          in: query
          required: false
          type: string
      responses:
        200:
          description: |
            A list of message IDs, which identifies a list received
            messages for the specified partnership. Note that upon query,
            the list of returned messages will be marked as read; which means
            it will not be returned next time the same endpoint is invoked
            unless include_read parameter is true.
          schema:
            type: object
            properties:
              message_ids:
                type: array
                items:
                  $ref: '#/definitions/ReceivedMessageIdentifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Get ebMS message by identifier
      description: |
        The get ebMS message by identifier endpoint queries Hermes server for the ebMS 
        message identified by the specified identifier.
      tags:
        - Message
        - Receive
        - ebms
      parameters:
        - name: message_id
          in: body
          required: true
          schema:
            $ref: '#/definitions/Identifier'
      responses:
        200:
          description: The message identified by the specified identifier
          schema:
            $ref: '#/definitions/EbmsReceivedMessage'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /message/receive/as2:
    get:
      summary: Get a list of received AS2 message
      description: |
        The get unread AS2 messages endpoints queries for the list of
        messages that has been received for the specified partnership.
        If the parameter include_read is true, only unread messages
        will be returned.
      tags:
        - Message
        - Receive
        - as2
      parameters:
        - name: partnership_id
          in: query
          required: true
          type: string
        - name: include_read
          in: query
          required: false
          type: string
      responses:
        200:
          description: |
            A list of message IDs, which identifies a list received
            messages for the specified partnership. Note that upon query,
            the list of returned messages will be marked as read; which means
            it will not be returned next time the same endpoint is invoked
            unless include_read parameter is true.
          schema:
            type: object
            properties:
              message_ids:
                type: array
                items:
                  $ref: '#/definitions/ReceivedMessageIdentifier'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Get AS2 message by identifier
      description: |
        The get AS2 message by identifier endpoint queries Hermes server for the AS2 
        message identified by the specified identifier.
      tags:
        - Message
        - Receive
        - as2
      parameters:
        - name: message_id
          in: body
          required: true
          schema:
            $ref: '#/definitions/Identifier'
      responses:
        200:
          description: The message identified by the specified identifier
          schema:
            $ref: '#/definitions/As2ReceivedMessage'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Ebms_Partnership:
    type: object
    properties:
      id:
        type: string
        description: Unique ID of partnership.
      cpa_id:
        type: string
        description: CPA ID field in ebMS contract.
      service:
        type: string
        description: Service field in ebMS contract.
      action:
        type: string
        description: Action field in ebMS contract.
      disabled:
        type: boolean
        description: Whether this partnership is disabled.
      transport_endpoint:
        type: string
        description: Transport endpoint of the partnership.
      is_hostname_verified:
        type: string
        description: Whether hostname is verified.
      ack_requested:
        type: string
        description: Whether acknowledgement is required.
      signed_ack_requested:
        type: string
        description: Whether signed acknowledgement is required.
      duplicate_elimination:
        type: string
        description: Whether duplicate elimination is required.
      message_order:
        type: string
        description: Whether message order is guaranteed.
      sync_reply_mode:
        type: string
        description: Whether sync reply mode is used.
      retries:
        type: integer
        description: Number of retries for delivery.
      retry_interval:
        type: integer
        description: Number of seconds to wait until retry.
      sign_requested:
        type: boolean
        description: Whether digital signature is required.
      sign_certicate:
        type: string
        format: byte
        description: Base64 encoded string of the signing certificate.
  As2_Partnership:
    type: object
    properties:
      id:
        type: string
        description: Unique ID of partnership.
      as2_from:
        type: string
        description: From field in AS2 contract.
      as2_to:
        type: string
        description: From field in AS2 contract.
      disabled:
        type: boolean
        description: Whether this partnership is disabled.
      sync_reply:
        type: string
        description: Whether sync reply mode is used.
      subject:
        type: string
        description: Subject field in AS2 contract.
      recipient_address:
        type: string
        description: Transport endpoint of the partnership.
      hostname_verified:
        type: string
        description: Whether hostname is verified.
      receipt_address:
        type: string
        description: Endpoint for sending receipt.
      receipt_requested:
        type: string
        description: Whether receipt is required.
      outbound_sign_required:
        type: string
        description: Whether digital signature is required for outbound message.
      outbound_encrypt_required:
        type: string
        description: Whether encryption is required for outbound message.
      outbound_compress_required:
        type: string
        description: Whether compression is required for outbound message.
      receipt_sign_required:
        type: string
        description: Whether digital signature is required for receipt.
      inbound_sign_required:
        type: string
        description: Whether digital signature is required for inbound message.
      inbound_encrypt_required:
        type: string
        description: Whether encryption is required for inbound message.
      retries:
        type: integer
        description: Number of retries for delivery.
      retry_interval:
        type: integer
        description: Number of seconds to wait until retry.
      sign_algorithm:
        type: string
        description: Digital signature algorithm.
      encrypt_algorithm:
        type: string
        description: Encryption algorithm.
      mic_algorithm:
        type: string
        description: Algorithm for generating MIC value.
      encrypt_certicate:
        type: string
        format: byte
        description: Base64 encoded string of the encryption certificate.
      verify_certicate:
        type: string
        format: byte
        description: Base64 encoded string of the signing certificate.
  Identifier:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier
  Message_Identifier:
    type: object
    properties:
      message_id:
        type: string
        description: Message identifier
  EbmsMessageSendRequest:
    type: object
    properties:
      partnership_id:
        type: string
        description: ID of partnership to refer to for the message to be sent.
      from_party_id:
        type: string
        description: From Party ID of the message to be sent.
      to_party_id:
        type: string
        description: From Party ID of the message to be sent.
      conversation_id:
        type: string
        description: Conversation ID of the message to be sent.
      payload:
        type: string
        description: Payload to be attached with the message, should be Base64 encoded.
  EbmsReceivedMessage:
    type: object
    properties:
      id:
        type: string
        description: Message ID of the message received.
      cpa_id:
        type: string
        description: CPA ID of the message received.
      service:
        type: string
        description: Service of the message received.
      action:
        type: string
        description: Action of the message received.
      from_party_id:
        type: string
        description: From Party ID of the message received.
      to_party_id:
        type: string
        description: From Party ID of the message received.
      conversation_id:
        type: string
        description: Conversation ID of the message received.
      timestamp:
        type: integer
        description: Message timestamp (Unix timestamp).
      status:
        type: string
        description: Status of the message received.
      payloads:
        type: array
        items:
          $ref: '#/definitions/Payload'
        description: Payload to be attached with the message, should be Base64 encoded.
  As2MessageSendRequest:
    type: object
    properties:
      as2_from:
        type: string
        description: From field in AS2 contract.
      as2_to:
        type: string
        description: To field in AS2 contract.
      type:
        type: string
        description: Type of payload to be sent.
      payload:
        type: string
        description: Payload to be attached with the message, should be Base64 encoded.
  As2ReceivedMessage:
    type: object
    properties:
      id:
        type: string
        description: Message ID of the message received.
      as2_from:
        type: string
        description: From field in AS2 contract.
      as2_to:
        type: string
        description: To field in AS2 contract.
      timestamp:
        type: integer
        description: Message timestamp (Unix timestamp).
      status:
        type: string
        description: Status of the message received.
      payloads:
        type: array
        items:
          $ref: '#/definitions/Payload'
        description: Payload to be attached with the message, should be Base64 encoded.
  MessageSendStatus:
    type: object
    properties:
      message_id:
        type: string
        description: Message ID
      status:
        type: string
        description: Send status of the message
  MessageStatusReset:
    type: object
    properties:
      message_id:
        type: string
        description: Message ID
      action:
        type: string
        description: Action to be taken to the message (only support 'reset' now)
  ReceivedMessageIdentifier:
    type: object
    properties:
      id:
        type: string
        description: Message ID
      timestamp:
        type: integer
        description: Message timestamp (Unix timestamp)
      status:
        type: string
        description: Message status
  EbmsMessageHistoryIdentifier:
    type: object
    properties:
      id:
        type: string
        description: Message ID
      cpa_id:
        type: string
        description: CPA ID of the message
      service:
        type: string
        description: Service of the message
      action:
        type: string
        description: Action of the message
      conversation_id:
        type: string
        description: Conversation ID of the message
      message_box:
        type: string
        description: Message box of the message
      timestamp:
        type: integer
        description: Message timestamp (Unix timestamp)
      status:
        type: string
        description: Message status
  As2MessageHistoryIdentifier:
    type: object
    properties:
      id:
        type: string
        description: Message ID
      as2_from:
        type: string
        description: From field in AS2 contract
      as2_to:
        type: string
        description: To field in AS2 contract
      message_box:
        type: string
        description: Message box of the message
      timestamp:
        type: integer
        description: Message timestamp (Unix timestamp)
      status:
        type: string
        description: Message status
  ActionResult:
    type: object
    properties:
      id:
        type: string
        description: ID
      success:
        type: boolean
        description: Whether the action requested is success
  Payload:
    type: object
    properties:
      payload:
        type: string
        description : Payload to attached with the message, Base64 encoded.
  Status:
    type: object
    properties:
      status:
        type: string
        description: Current status of Hermes API server.
      server_time:
        type: integer
        description: Current datetime in Hermes server (Unix timestamp)
  Error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
